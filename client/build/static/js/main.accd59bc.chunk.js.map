{"version":3,"sources":["../../shared sync /^/.//.*$","../../shared/yarn.lock","App.jsx","index.js","../../shared/index.js","feathers/app.js","../../shared/comments.js","../../shared/posts.js","../../shared/users.js","feathers/app.hooks.js","feathers/batchClient.js","feathers/posts.js","feathers/profile.js","feathers/comments.js","feathers/users.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","App","props","app","useAppState","limit","useBatch","maxBatchSize","method","joinLocation","provider","docsOpen","loading","error","serverProfile","clientProfile","posts","duration","setState","setAndLoad","newState","loadPosts","a","getState","service","create","start","Date","getTime","find","query","$sort","_id","$limit","end","newServerProfile","newClientProfile","console","useMount","creds","strategy","email","password","Promise","all","authenticate","socketApp","then","catch","enforceMaxBatchSize","setDefaultMaxBatchSize","Math","min","className","href","target","rel","onClick","message","disabled","style","maxWidth","right","top","position","fontSize","type","onChange","event","newMaxBatchSize","value","alert","placeholder","max","width","height","JSON","stringify","ErrorBoundary","state","this","window","location","children","React","Component","ReactDOM","render","StrictMode","document","getElementById","ContextLoader","require","makeParams","context","params","loader","paramsFromClient","rest","paramsForServer","setupLoader","switchHook","withResultsPrimary","withResultsCached","withResultsLoad","process","hrtime","profiler","getProfile","clearProfile","API_PATH","origin","appState","useState","set","useCallback","setupApp","configure","feathers","authentication","profile","comments","users","logger","stats","hooks","appHooks","batchClient","batchService","timeout","exclude","setup","restApp","fetch","socketio","io","oldService","path","call","withResult","user","comment","get","user_id","load","post","post_id","loadMany","bio","bio_id","before","update","patch","remove","after","convert","BatchManager","options","batches","batch","push","setTimeout","flush","currentBatches","calls","payload","results","forEach","index","callResult","status","reject","reason","makeArguments","data","excludes","concat","manager","collectBatches","includes","args","batchPromise","addBatchCall","result","Profile","use","_log"],"mappings":"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","file":"static/js/main.accd59bc.chunk.js","sourcesContent":["var map = {\n\t\"./\": 3,\n\t\"./comments\": 63,\n\t\"./comments.js\": 63,\n\t\"./index\": 3,\n\t\"./index.js\": 3,\n\t\"./package\": 67,\n\t\"./package.json\": 67,\n\t\"./posts\": 68,\n\t\"./posts.js\": 68,\n\t\"./users\": 69,\n\t\"./users.js\": 69,\n\t\"./yarn.lock\": 168\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 122;","module.exports = __webpack_public_path__ + \"static/media/yarn.1ac1a40b.lock\";","import React from 'react';\nimport app from './feathers/app';\nimport { useMount } from 'react-use';\n\nfunction App(props) {\n  const [\n    {\n      limit,\n      useBatch,\n      maxBatchSize,\n      method,\n      joinLocation,\n      provider,\n      docsOpen,\n      loading,\n      error,\n      serverProfile,\n      clientProfile,\n      posts,\n      duration\n    },\n    setState\n  ] = app.useAppState();\n\n  const setAndLoad = (newState) => {\n    setState(newState);\n    loadPosts();\n  };\n\n  const loadPosts = async () => {\n    setState({ loading: true, error: null });\n\n    const { limit, method, joinLocation, maxBatchSize } = app.getState();\n\n    try {\n      await app.service('server/profile').create({});\n      await app.service('client/profile').create({});\n\n      const start = new Date().getTime();\n      const posts = await app.service('api/posts').find({\n        query: {\n          $sort: { _id: 1 },\n          $limit: limit || 1\n        },\n        method,\n        joinLocation,\n        maxBatchSize\n      });\n      const end = new Date().getTime();\n\n      const newServerProfile = await app.service('server/profile').find();\n      const newClientProfile = await app.service('client/profile').find();\n\n      setState({\n        posts,\n        duration: end - start,\n        serverProfile: newServerProfile,\n        clientProfile: newClientProfile,\n        loading: false\n      });\n    } catch (error) {\n      console.error(error);\n\n      setState({\n        error,\n        loading: false\n      });\n    }\n  };\n\n  useMount(() => {\n    const creds = {\n      strategy: 'local',\n      email: 'na@example.com',\n      password: 'password'\n    };\n\n    Promise.all([app.authenticate(creds), app.socketApp.authenticate(creds)])\n      .then(() => {\n        loadPosts();\n      })\n      .catch((error) => {\n        setState({ error, loading: false });\n      });\n  });\n\n  const enforceMaxBatchSize = method === 'load' && joinLocation === 'client';\n  const defaultMaxBatchSize = 20;\n  const setDefaultMaxBatchSize = () => {\n    return enforceMaxBatchSize\n      ? Math.min(maxBatchSize, defaultMaxBatchSize)\n      : maxBatchSize;\n  };\n\n  return (\n    <div className=\"container-fluid mt-4\">\n      <p className=\"lead\">\n        This is a basic example app that compares doing joins/population on the\n        client vs on the server. It is also a test bed and exmaple of a new v2\n        for{' '}\n        <a\n          href=\"https://github.com/feathersjs-ecosystem/batch-loader/tree/v2\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          feathers-dataloader\n        </a>\n        . See also the{' '}\n        <a\n          href=\"https://github.com/feathersjs-ecosystem/batch-loader/issues/18\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          v2 RFC\n        </a>{' '}\n        and leave some feedback! You can also checkout the{' '}\n        <a\n          href=\"https://github.com/DaddyWarbucks/test-feathers-client-joins\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          source code\n        </a>{' '}\n        for this project. Specifically, see the <code>shared</code> direcotry.\n      </p>\n      <div className=\"card mb-4 card-light\">\n        <div className=\"card-header d-flex justify-content-between\">\n          <h3 className=\"mb-0\">Docs</h3>\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => {\n              setState({ docsOpen: !docsOpen });\n            }}\n          >\n            {docsOpen ? 'Hide' : 'Show'}\n          </button>\n        </div>\n        <div className={`card-body ${docsOpen ? '' : 'd-none'}`}>\n          <p>\n            The app makes one request to{' '}\n            <code>app.service('api/posts').find()</code>. The posts then join a{' '}\n            <code>user</code> and <code>comments</code>. Each user then joins on\n            a <code>bio</code>, and each comment subsequently joins on its{' '}\n            <code>user</code> (and subsequently its bio).\n          </p>\n          <ul>\n            <li className=\"mb-2\">\n              10,000 posts, each with random <code>user_id</code>\n            </li>\n            <li className=\"mb-2\">\n              50,000 comments, each with random <code>user_id</code> and{' '}\n              <code>post_id</code>\n            </li>\n            <li className=\"mb-2\">\n              5,000 users, each with corresponding <code>bio_id</code>\n            </li>\n            <li className=\"mb-2\">5,000 bios</li>\n          </ul>\n          <p>\n            These relationships represent a good example of nested joins where\n            some of those joins are \"repeating\" resources, such as the post\n            joining its author and comments joinging their user. This is an\n            excellent usecase for <code>feathers-datalader</code>.\n          </p>\n\n          <ul>\n            <li>\n              You can checkout a quick video of me rambling out this too.{' '}\n              <a\n                href=\"https://www.loom.com/share/89e100a63d7e42c0b562fde3f3c29ec2\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Watch the video\n              </a>\n            </li>\n            <li className=\"mb-2\">\n              The app also uses{' '}\n              <a\n                href=\"https://github.com/feathersjs-ecosystem/feathers-batch\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                feathers-batch\n              </a>\n              , which is a clever way of allowing the client to specify which\n              joins to do, but actually executes that code on the server. For\n              this app, the <code>timeout</code> option has been set to 3ms.\n              This means that when a batch \"starts\" it waits 3ms for any other\n              calls to happen before executing them all at once. This 3ms is\n              enough time to collect all of our calls in the resolver, but it\n              does basically add an arbitrary 9ms of delay.\n            </li>\n            <li className=\"mb-2\">\n              The app uses authentication. This means that there are additional\n              requests to{' '}\n              <code>app.service('api/users').get(authedUserId)</code> in the\n              authentication hooks. Note the difference this makes when using\n              the different join types.\n            </li>\n            <li className=\"mb-2\">\n              For simplicty in this example, the app uses NeDB as its database.\n              NeDB is a filesystem database where the records are just flat JSON\n              files. But, its important to note that it is not making an HTTP\n              request to some database server that lives on another machine. As\n              impressive as the different loading techniques are, it should be\n              noted that on a production database there would be a corresponding\n              number of HTTP requests (think about all thos .get() requests...)\n              to another server...so basically twice as many as we see here. The\n              potential resources and performance benefits are quite large in\n              that case.\n            </li>\n            <li className=\"mb-2\">\n              When using REST, the browser enforces a character limit on URL\n              length. Dataloader creates long URL's containing a list of ID's.\n              Set the \"maxBatchSize\" to set a dataloader option which limits the\n              number of keys in the URL by maxing out and then starting a new\n              batch. For this app, that limit is about 20 because of the long\n              length of the UUID's. But, you probaly want to unset it when using\n              server or socket side joins. For the sake of not crashing the app,\n              a max limit of 20 is enforced when using client joins.\n            </li>\n            <li>\n              Its helpful to use the netowrk tab in DevTools when using this\n              app. It really drives home how many HTTP requests are being made.\n              Checkout{' '}\n              <a\n                href=\"https://stackoverflow.com/questions/43081107/how-do-you-inspect-websocket-traffic-with-chrome-developer-tools\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                how to inspect socket requests\n              </a>\n              .\n            </li>\n          </ul>\n        </div>\n      </div>\n\n      {error && <div className=\"alert alert-danger\">{error.message}</div>}\n\n      <div className=\"row mb-4\">\n        <div className=\"col-sm-auto\">\n          <h4>Provider</h4>\n          <div className=\"btn-group mb-2\">\n            <button\n              disabled={loading}\n              className={`btn btn-secondary ${\n                provider === 'socket' ? 'active' : ''\n              }`}\n              onClick={() => {\n                setAndLoad({ provider: 'socket' });\n              }}\n            >\n              Socket\n            </button>\n            <button\n              disabled={loading}\n              className={`btn btn-secondary ${\n                provider === 'rest' ? 'active' : ''\n              }`}\n              onClick={() => {\n                setAndLoad({\n                  provider: 'rest',\n                  maxBatchSize: setDefaultMaxBatchSize()\n                });\n              }}\n            >\n              REST\n            </button>\n          </div>\n          <p>\n            Configure the client to make <br /> calls via Socket or REST\n          </p>\n        </div>\n        <div className=\"col-sm-auto\">\n          <h4>Join Location</h4>\n          <div className=\"mb-2\">\n            <div className=\"btn-group mr-2\">\n              <button\n                disabled={loading}\n                className={`btn btn-info ${\n                  !useBatch && joinLocation === 'client' ? 'active' : ''\n                }`}\n                onClick={() => {\n                  setAndLoad({\n                    joinLocation: 'client',\n                    maxBatchSize: setDefaultMaxBatchSize()\n                  });\n                }}\n              >\n                Client\n              </button>\n              <button\n                disabled={loading}\n                className={`btn btn-info ${useBatch ? 'active' : ''}`}\n                onClick={() => {\n                  setAndLoad({ useBatch: !useBatch });\n                }}\n              >\n                BatchClient\n              </button>\n            </div>\n            <button\n              disabled={loading}\n              className={`btn btn-info ${\n                joinLocation === 'server' ? 'active' : ''\n              }`}\n              onClick={() => {\n                setAndLoad({ joinLocation: 'server' });\n              }}\n            >\n              Server\n            </button>\n          </div>\n          <p>\n            Choose between doing joins on the <br /> client or the server. See\n            also{' '}\n            <a\n              href=\"https://github.com/feathersjs-ecosystem/feathers-batch\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              feathers-batch\n            </a>\n            .\n          </p>\n        </div>\n        <div className=\"col-sm-auto\">\n          <h4>Methods</h4>\n          <div className=\"btn-group mb-2\">\n            <button\n              disabled={loading}\n              className={`btn btn-success ${\n                method === 'primary' ? 'active' : ''\n              }`}\n              onClick={() => {\n                setAndLoad({ method: 'primary' });\n              }}\n            >\n              Service\n            </button>\n            <button\n              disabled={loading}\n              className={`btn btn-success ${\n                method === 'cached' ? 'active' : ''\n              }`}\n              onClick={() => {\n                setAndLoad({ method: 'cached' });\n              }}\n            >\n              CachedService\n            </button>\n            <button\n              disabled={loading}\n              className={`btn btn-success ${method === 'load' ? 'active' : ''}`}\n              onClick={() => {\n                setAndLoad({ method: 'load' });\n              }}\n            >\n              DataLoader\n            </button>\n            {method === 'load' && (\n              <div\n                className=\"d-inline position-relative\"\n                style={{ maxWidth: 130 }}\n              >\n                <div style={{ right: 10, top: 6, position: 'absolute' }}>\n                  <span style={{ fontSize: '0.7rem' }}>maxBatchSize</span>\n                </div>\n                <input\n                  disabled={loading}\n                  type=\"number\"\n                  className=\"form-control\"\n                  onChange={(event) => {\n                    const newMaxBatchSize = event.target.value;\n                    if (\n                      enforceMaxBatchSize &&\n                      newMaxBatchSize > defaultMaxBatchSize\n                    ) {\n                      return alert(\n                        'The default matchBaxSize when using client joins is 20. Please see the docs at the top of the page for more details.'\n                      );\n                    }\n                    setAndLoad({ maxBatchSize: newMaxBatchSize });\n                  }}\n                />\n              </div>\n            )}\n          </div>\n          <p>\n            User feathers get/find methods. Or checkout <br />\n            <a\n              href=\"https://github.com/feathersjs-ecosystem/batch-loader/issues/18\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              v2 RFC\n            </a>{' '}\n            for more info. See docs for \"maxBatchSize\".\n          </p>\n        </div>\n        <div className=\"col-sm-auto\">\n          <h4>Limit</h4>\n          <div style={{ maxWidth: 120 }}>\n            <input\n              disabled={loading}\n              type=\"number\"\n              placeholder=\"limit\"\n              max={10000}\n              className=\"form-control mb-2\"\n              value={limit}\n              onChange={(event) => {\n                const limit = event.target.value;\n                setAndLoad({ limit });\n              }}\n            />\n          </div>\n          <p>Set a up to 10,000.</p>\n        </div>\n      </div>\n\n      <div className=\"mb-4 p-3 bg-light rounded\">\n        <h3>\n          Duration:{' '}\n          {loading ? (\n            <div\n              className=\"spinner-border\"\n              style={{\n                width: '2rem',\n                height: '2rem'\n              }}\n            ></div>\n          ) : (\n            <span className=\"text-success\">{duration}ms</span>\n          )}\n        </h3>\n      </div>\n\n      <div className=\"row mb-4\">\n        <div className=\"col\">\n          <h4>Server Profile</h4>\n          {serverProfile && (\n            <pre className=\"p-3 bg-light rounded\">\n              {JSON.stringify(serverProfile, null, 2)}\n            </pre>\n          )}\n        </div>\n        <div className=\"col\">\n          <h4>Client Profile</h4>\n          {clientProfile && (\n            <pre className=\"p-3 bg-light rounded\">\n              {JSON.stringify(clientProfile, null, 2)}\n            </pre>\n          )}\n        </div>\n      </div>\n      <div>\n        <div className=\"mb-4\">\n          <h4>Results</h4>\n          {posts && (\n            <pre className=\"p-3 bg-light rounded\">\n              {JSON.stringify(posts, null, 2)}\n            </pre>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  componentDidCatch(error) {\n    this.setState({ error });\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <div className=\"d-flex vh-100 align-items-center justify-content-center\">\n          <div className=\"p-4 bg-white shadow rounded\">\n            <h3 className=\"text-danger mb-4\">\n              {this.state.error.message || 'Something went wrong!'}\n            </h3>\n            <a href={window.location} className=\"btn btn-primary btn-block\">\n              Reload Page\n            </a>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundary>\n      <App />\n    </ErrorBoundary>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","const { ContextLoader } = require('@feathers-plus/batch-loader');\n\nmodule.exports.makeParams = (context) => {\n  return {\n    method: context.params.method,\n    joinLocation: context.params.joinLocation,\n    maxBatchSize: context.params.maxBatchSize,\n    loader: context.params.loader\n  };\n};\n\nmodule.exports.paramsFromClient = (context) => {\n  if (context.params.provider) {\n    const { method, joinLocation, maxBatchSize, ...rest } =\n      context.params.query || {};\n\n    context.params = {\n      ...context.params,\n      query: rest,\n      method,\n      joinLocation,\n      maxBatchSize\n    };\n  }\n\n  // console.log(`paramsFromClient:${context.path}: `, { method, joinLocation });\n\n  return context;\n};\n\nmodule.exports.paramsForServer = (context) => {\n  const { method, joinLocation, maxBatchSize } = context.params;\n  context.params.query = {\n    ...context.params.query,\n    method,\n    joinLocation,\n    maxBatchSize\n  };\n  // console.log('paramsForServer: ', { method, joinLocation });\n  return context;\n};\n\nmodule.exports.setupLoader = (context) => {\n  if (!context.params.loader) {\n    const loader = new ContextLoader(context);\n    context.params.loader = loader.loader;\n  }\n  return context;\n};\n\nmodule.exports.switchHook = (service, location) => (context) => {\n  const { joinLocation, method } = context.params;\n\n  // console.log('switchHook: ', `${joinLocation} | ${context.path} | ${method}`);\n\n  if (!joinLocation || !method) {\n    return context;\n  }\n\n  if (joinLocation !== location) {\n    return context;\n  }\n\n  const {\n    withResultsPrimary,\n    withResultsCached,\n    withResultsLoad\n  } = require(`./${service}`);\n\n  switch (method) {\n    case 'primary':\n      return withResultsPrimary(context);\n    case 'cached':\n      return withResultsCached(context);\n    case 'load':\n      return withResultsLoad(context);\n\n    default:\n      return context;\n  }\n};\n","import io from 'socket.io-client';\nimport feathers from '@feathersjs/client';\nimport appHooks from './app.hooks';\nimport { batchClient } from './batchClient';\nimport { useState, useCallback } from 'react';\n\nimport posts from './posts';\nimport profile from './profile';\nimport comments from './comments';\nimport users from './users';\n\n// Required to run feathers-profilers in the browser\nprocess.hrtime = require('browser-process-hrtime');\nconst { profiler, getProfile, clearProfile } = require('feathers-profiler');\n\nconst API_PATH =\n  process.env.NODE_ENV === 'development'\n    ? 'http://localhost:3030'\n    : window.location.origin;\n\n// Share state across both the restApp and\n// the socketApp\nlet appState = {\n  limit: 10,\n  useBatch: false,\n  maxBatchSize: 20,\n  method: 'primary',\n  joinLocation: 'client',\n  provider: 'rest',\n  docsOpen: false,\n  loading: true,\n  error: null,\n  serverProfile: null,\n  clientProfile: null,\n  posts: null,\n  duration: null\n};\n\nconst setState = (newState) => {\n  appState = { ...appState, ...newState };\n};\n\nconst getState = () => {\n  return { ...appState };\n};\n\nconst useAppState = () => {\n  const [, render] = useState({});\n  const set = useCallback((newState) => {\n    setState(newState);\n    render({});\n  }, []);\n  return [appState, set];\n};\n\nconst setupApp = (app) => {\n  app.configure(feathers.authentication());\n\n  app.setState = setState;\n  app.getState = getState;\n  app.useAppState = useAppState;\n\n  app.configure(posts);\n  app.configure(profile);\n  app.configure(comments);\n  app.configure(users);\n\n  app.configure(\n    profiler({\n      logger: null,\n      stats: 'total'\n    })\n  );\n\n  app.set('profiler', {\n    getProfile,\n    clearProfile\n  });\n\n  app.hooks(appHooks);\n\n  app.configure(\n    batchClient({\n      batchService: 'api/batch',\n      timeout: 3,\n      exclude: ['server/profile', 'client/profile', 'authentication']\n    })\n  );\n\n  app.setup(app);\n\n  return app;\n};\n\nconst restApp = feathers();\nrestApp.configure(feathers.rest(API_PATH).fetch(fetch));\nsetupApp(restApp);\n\nconst socketApp = feathers();\nsocketApp.configure(feathers.socketio(io(API_PATH), { timeout: 100000 }));\nsetupApp(socketApp);\n\nrestApp.socketApp = socketApp;\n\nconst oldService = restApp.service;\nrestApp.service = function (path) {\n  const { provider } = restApp.getState();\n  if (provider === 'rest') {\n    return oldService.call(this, path);\n  }\n  return restApp.socketApp.service(path);\n};\n\nexport default restApp;\n","const { withResult } = require('feathers-fletching');\nconst { makeParams } = require('./index');\n\nmodule.exports.withResultsPrimary = withResult({\n  user: async (comment, context) => {\n    const user = await context.app\n      .service('api/users')\n      .get(comment.user_id, makeParams(context));\n    delete user.password;\n    return user;\n  }\n});\n\nmodule.exports.withResultsLoad = withResult({\n  user: async (comment, context) => {\n    const { maxBatchSize } = makeParams(context);\n    const user = await context.params\n      .loader('api/users', { maxBatchSize })\n      .load({ _id: comment.user_id }, null, makeParams(context));\n    delete user.password;\n    return user;\n  }\n});\n\nmodule.exports.withResultsCached = withResult({\n  user: async (comment, context) => {\n    const user = await context.params\n      .loader('api/users')\n      .get(comment.user_id, null, makeParams(context));\n    delete user.password;\n    return user;\n  }\n});\n","const { withResult } = require('feathers-fletching');\nconst { makeParams } = require('./index');\n\nmodule.exports.withResultsPrimary = withResult({\n  user: async (post, context) => {\n    const user = await context.app\n      .service('api/users')\n      .get(post.user_id, makeParams(context));\n    delete user.password;\n    return user;\n  },\n  comments: (post, context) => {\n    return context.app\n      .service('api/comments')\n      .find({ query: { post_id: post._id }, ...makeParams(context) });\n  }\n});\n\nmodule.exports.withResultsLoad = withResult({\n  user: async (post, context) => {\n    const { maxBatchSize } = makeParams(context);\n    const user = await context.params\n      .loader('api/users', { maxBatchSize })\n      .load({ _id: post.user_id }, null, makeParams(context));\n    delete user.password;\n    return user;\n  },\n  comments: (post, context) => {\n    const { maxBatchSize } = makeParams(context);\n    return context.params\n      .loader('api/comments', { maxBatchSize })\n      .loadMany({ post_id: post._id }, null, makeParams(context));\n  }\n});\n\nmodule.exports.withResultsCached = withResult({\n  user: async (post, context) => {\n    const user = await context.params\n      .loader('api/users')\n      .get(post.user_id, null, makeParams(context));\n    delete user.password;\n    return user;\n  },\n  comments: (post, context) => {\n    return context.params\n      .loader('api/comments')\n      .find({ query: { post_id: post._id } }, makeParams(context));\n  }\n});\n","const { withResult } = require('feathers-fletching');\nconst { makeParams } = require('./index');\n\nmodule.exports.withResultsPrimary = withResult({\n  bio: (user, context) => {\n    return context.app\n      .service('api/bios')\n      .get(user.bio_id, makeParams(context));\n  }\n});\n\nmodule.exports.withResultsLoad = withResult({\n  bio: (user, context) => {\n    const { maxBatchSize } = makeParams(context);\n    return context.params\n      .loader('api/bios', { maxBatchSize })\n      .load({ _id: user.bio_id }, null, makeParams(context));\n  }\n});\n\nmodule.exports.withResultsCached = withResult({\n  bio: (user, context) => {\n    return context.params\n      .loader('api/bios')\n      .get(user.bio_id, null, makeParams(context));\n  }\n});\n","import { setupLoader, paramsForServer } from 'shared';\n\nexport default {\n  before: {\n    all: [setupLoader, paramsForServer],\n    find: [],\n    get: [],\n    create: [],\n    update: [],\n    patch: [],\n    remove: []\n  },\n\n  after: {\n    all: [],\n    find: [],\n    get: [],\n    create: [],\n    update: [],\n    patch: [],\n    remove: []\n  },\n\n  error: {\n    all: [\n      (context) => {\n        console.error(context.error);\n      }\n    ],\n    find: [],\n    get: [],\n    create: [],\n    update: [],\n    patch: [],\n    remove: []\n  }\n};\n","// Note this file is directly copy pasted from the\n// feathers-batch source code so that it can add\n// the code on lines 76-79. It is also updated\n// to use ESM modules instead of CommonJS so\n// CRA does not bark...\n// It is otherwise unchanged.\n\nconst { convert } = require('@feathersjs/errors');\n\nexport class BatchManager {\n  constructor(app, options) {\n    this.app = app;\n    this.batches = [];\n    this.timeout = null;\n    this.options = options;\n  }\n\n  addBatchCall(batch) {\n    this.batches.push(batch);\n\n    if (this.timeout === null) {\n      this.timeout = setTimeout(() => this.flush(), this.options.timeout || 50);\n    }\n  }\n\n  async flush() {\n    const currentBatches = this.batches;\n\n    this.batches = [];\n    this.timeout = null;\n\n    const { batchService } = this.options;\n    const results = await this.app.service(batchService).create({\n      calls: currentBatches.map(({ payload }) => payload)\n    });\n\n    currentBatches.forEach((batch, index) => {\n      const callResult = results[index];\n\n      if (callResult.status === 'fulfilled') {\n        batch.resolve(callResult.value);\n      } else {\n        batch.reject(convert(callResult.reason));\n      }\n    });\n  }\n}\n\nexport const makeArguments = (context) => {\n  const { query = {} } = context.params;\n\n  switch (context.method) {\n    case 'get':\n    case 'remove':\n      return [context.id, query];\n    case 'update':\n    case 'patch':\n      return [context.id, context.data, query];\n    case 'create':\n      return [context.data, query];\n    default:\n      return [query];\n  }\n};\n\nexport const batchClient = (options) => (app) => {\n  if (typeof options.batchService !== 'string') {\n    throw new Error('`batchService` name option must be passed to batchClient');\n  }\n\n  const excludes = (options.exclude || []).concat(options.batchService);\n  const manager = new BatchManager(app, options);\n  const collectBatches = async (context) => {\n    const { method, path } = context;\n\n    const { useBatch } = app.getState();\n    if (!useBatch) {\n      return context;\n    }\n\n    if (excludes.includes(path)) {\n      return context;\n    }\n\n    const args = makeArguments(context);\n    const payload = [method, path, ...args];\n    const batchPromise = new Promise((resolve, reject) =>\n      manager.addBatchCall({\n        resolve,\n        reject,\n        payload\n      })\n    );\n\n    context.result = await batchPromise;\n\n    return context;\n  };\n\n  app.hooks({\n    before: collectBatches\n  });\n};\n","import { switchHook } from 'shared';\n\nexport default (app) => {\n  app.service('api/posts').hooks({\n    before: {\n      all: []\n    },\n    after: {\n      all: [switchHook('posts', 'client')]\n    }\n  });\n};\n","export default (app) => {\n  class Profile {\n    constructor(options, app) {\n      this.options = options || {};\n    }\n\n    setup(app) {\n      this.app = app;\n      this.profiler = app.get('profiler');\n    }\n\n    async find(params) {\n      return this.profiler.getProfile();\n    }\n\n    async create(data, params) {\n      if (this.profiler.getProfile()) {\n        this.profiler.clearProfile();\n      }\n      return {};\n    }\n  }\n\n  app.use('client/profile', new Profile());\n\n  app.service('client/profile').hooks({\n    after: {\n      all: [\n        (context) => {\n          const { useBatch } = app.getState();\n\n          delete context._log;\n          delete context.result['client/profile'];\n          delete context.result['server/profile'];\n          delete context.result['authentication'];\n\n          if (useBatch) {\n            delete context.result['api/users'];\n            delete context.result['api/comments'];\n            delete context.result['api/bios'];\n          }\n\n          return context;\n        }\n      ]\n    }\n  });\n\n  return app;\n};\n","import { switchHook } from 'shared';\n\nexport default (app) => {\n  app.service('api/comments').hooks({\n    before: {\n      all: []\n    },\n    after: {\n      all: [switchHook('comments', 'client')]\n    }\n  });\n};\n","import { switchHook } from 'shared';\n\nexport default (app) => {\n  app.service('api/users').hooks({\n    before: {\n      all: []\n    },\n    after: {\n      all: [switchHook('users', 'client')]\n    }\n  });\n};\n"],"sourceRoot":""}