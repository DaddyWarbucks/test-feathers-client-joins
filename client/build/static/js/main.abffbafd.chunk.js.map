{"version":3,"sources":["../node_modules/shared sync /^/.//.*$","App.jsx","index.js","feathers/app.js","feathers/app.hooks.js","feathers/batchClient.js","feathers/posts.js","feathers/profile.js","feathers/comments.js","feathers/users.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","App","props","componentDidMount","a","app","authenticate","strategy","email","password","loadPosts","setState","loading","service","create","start","Date","getTime","find","query","$sort","_id","$limit","state","limit","method","joinLocation","posts","end","serverProfile","clientProfile","duration","error","provider","URLSearchParams","window","location","search","get","docsOpen","useBatch","this","className","href","target","rel","onClick","message","disabled","set","type","value","onChange","event","style","width","height","JSON","stringify","React","Component","ReactDOM","render","StrictMode","document","getElementById","process","hrtime","require","profiler","getProfile","clearProfile","feathers","API_PATH","ENV","configure","rest","fetch","socketio","io","timeout","authentication","mixins","push","loaderFactory","opts","params","options","multi","serviceParams","paginate","BatchLoader","$in","getUniqueKeys","result","getResultsByKey","data","rec","profile","comments","users","logger","stats","hooks","appHooks","batchClient","batchService","exclude","setup","before","all","setupLoader","paramsForServer","update","patch","remove","after","context","console","convert","BatchManager","batches","batch","setTimeout","flush","currentBatches","calls","payload","results","forEach","index","callResult","status","reject","reason","makeArguments","excludes","concat","manager","collectBatches","path","includes","args","batchPromise","Promise","addBatchCall","switchHook","Profile","use","_log"],"mappings":"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","file":"static/js/main.abffbafd.chunk.js","sourcesContent":["var map = {\n\t\"./\": 3,\n\t\"./comments\": 64,\n\t\"./comments.js\": 64,\n\t\"./index\": 3,\n\t\"./index.js\": 3,\n\t\"./package\": 68,\n\t\"./package.json\": 68,\n\t\"./posts\": 69,\n\t\"./posts.js\": 69,\n\t\"./users\": 70,\n\t\"./users.js\": 70,\n\t\"./yarn.lock\": 171\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 125;","import React from \"react\";\nimport app from \"./feathers/app\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const urlParams = new URLSearchParams(window.location.search);\n    const provider = urlParams.get(\"provider\") || \"socket\";\n\n    this.state = {\n      docsOpen: false,\n      loading: true,\n      error: null,\n      serverProfile: null,\n      clientProfile: null,\n      posts: null,\n      duration: null,\n      useBatch: false,\n      limit: 100,\n      method: \"primary\",\n      joinLocation: \"client\",\n      provider,\n    };\n  }\n\n  componentDidMount = async () => {\n    await app.authenticate({\n      strategy: \"local\",\n      email: \"na@example.com\",\n      password: \"password\",\n    });\n\n    this.loadPosts();\n  };\n\n  loadPosts = async () => {\n    this.setState({ loading: true });\n    try {\n      await app.service(\"server/profile\").create({});\n      await app.service(\"client/profile\").create({});\n\n      const start = new Date().getTime();\n      const posts = await app.service(\"api/posts\").find({\n        query: {\n          $sort: { _id: 1 },\n          $limit: this.state.limit,\n        },\n        method: this.state.method,\n        joinLocation: this.state.joinLocation,\n      });\n      const end = new Date().getTime();\n\n      const serverProfile = await app.service(\"server/profile\").find();\n      const clientProfile = await app.service(\"client/profile\").find();\n\n      this.setState({\n        posts,\n        duration: end - start,\n        serverProfile,\n        clientProfile,\n        loading: false,\n        error: null,\n      });\n    } catch (error) {\n      this.setState({\n        error,\n        loading: false,\n      });\n    }\n  };\n\n  render() {\n    const {\n      docsOpen,\n      loading,\n      error,\n      serverProfile,\n      clientProfile,\n      posts,\n      duration,\n      useBatch,\n      limit,\n      method,\n      joinLocation,\n      provider,\n    } = this.state;\n\n    return (\n      <div className=\"container-fluid mt-4\">\n        <p className=\"lead\">\n            This is a basic example app that compares doing joins/population on\n            the client vs on the server. It is also a test bed and exmaple of a\n            new v2 for{\" \"}\n            <a\n              href=\"https://github.com/feathersjs-ecosystem/batch-loader/tree/v2\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              feathers-dataloader\n            </a>\n            . See also the{\" \"}\n            <a\n              href=\"https://github.com/feathersjs-ecosystem/batch-loader/issues/18\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              v2 RFC\n            </a>{\" \"}\n            and leave some feedback! You can also checkout the{\" \"}\n            <a\n              href=\"https://github.com/DaddyWarbucks/test-feathers-client-joins\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              source code\n            </a>{\" \"}\n            for this project. Specifically, see the <code>shared</code>{\" \"}\n            direcotry.\n          </p>\n        <div className=\"card mb-4 card-light\">\n          <div className=\"card-header d-flex justify-content-between\">\n            <h3 className=\"mb-0\">Docs</h3>\n            <button className=\"btn btn-primary\" onClick={() => {\n              this.setState({ docsOpen: !docsOpen });\n            }}>{docsOpen ? 'Hide' : 'Show'}</button>\n          </div>\n          <div className={`card-body ${docsOpen ? '' : 'd-none'}`}>\n          <p>\n            This is a basic example app that compares doing joins/population on\n            the client vs on the server. It is also a test bed and exmaple of a\n            new v2 for{\" \"}\n            <a\n              href=\"https://github.com/feathersjs-ecosystem/batch-loader/tree/v2\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              feathers-dataloader\n            </a>\n            . See also the{\" \"}\n            <a\n              href=\"https://github.com/feathersjs-ecosystem/batch-loader/issues/18\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              v2 RFC\n            </a>{\" \"}\n            and leave some feedback! You can also checkout the{\" \"}\n            <a\n              href=\"https://github.com/DaddyWarbucks/test-feathers-client-joins\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              source code\n            </a>{\" \"}\n            for this project. Specifically, see the <code>shared</code>{\" \"}\n            direcotry.\n          </p>\n          <p>\n            The app makes one request to{\" \"}\n            <code>app.service('api/posts').find()</code>. The posts then join a{\" \"}\n            <code>user</code> and <code>comments</code>. Each user then joins on\n            a <code>bio</code>, and each comment subsequently joins on its{\" \"}\n            <code>user</code> (and subsequently its bio).\n          </p>\n          <ul>\n            <li className=\"mb-2\">\n              10,000 posts, each with random <code>user_id</code>\n            </li>\n            <li className=\"mb-2\">\n              50,000 comments, each with random <code>user_id</code> and{\" \"}\n              <code>post_id</code>\n            </li>\n            <li className=\"mb-2\">\n              5,000 users, each with corresponding <code>bio_id</code>\n            </li>\n            <li className=\"mb-2\">5,000 bios</li>\n          </ul>\n          <p>\n            These relationships represent a good example of nested joins where\n            some of those joins are \"repeating\" resources, such as the post\n            joining its author and comments joinging their user. This is an\n            excellent usecase for <code>feathers-datalader</code>.\n          </p>\n\n          <ul>\n            <li className=\"mb-2\">\n              The app also uses{\" \"}\n            <a\n              href=\"https://github.com/feathersjs-ecosystem/feathers-batch\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              feathers-batch\n            </a>\n            , which is a clever way of allowing the client to specify which\n            joins to do, but actually executes that code on the server.\n              Note that when using feathers-batch, you will see lots of client\n              side calls, but its imporant to understand that these calls are\n              not actual HTTP requests. The service was called, but it did not\n              make a socket/rest request. It simply created \"intructions\" for\n              feathers-batch.\n            </li>\n            <li className=\"mb-2\">\n              The app uses authentication. This means that there are additional\n              requests to{\" \"}\n              <code>app.service('api/users').get(authedUserId)</code> in the\n              authentication hooks. Note the difference this makes when using\n              the different join types.\n            </li>\n            <li className=\"mb-2\">\n              For simplicty in this example, the app uses NeDB as its database.\n              NeDB is a filesystem database where the records are just flat JSON\n              files. But, its important to note that it is not making an HTTP\n              request to some database server that lives on another machine. As\n              impressive as the different loading techniques are, it should be\n              noted that on a production database there would be a corresponding\n              number of HTTP requests (think about all thos .get() requests...).\n              The potential resources and performance benefits are quite large.\n            </li>\n          </ul>\n          </div>\n        </div>\n\n        {error && <div className=\"alert alert-danger\">{error.message}</div>}\n\n        <div className=\"row mb-4\">\n          <div className=\"col-sm-auto\">\n            <h4>Provider</h4>\n            <div className=\"btn-group mb-2\">\n              <a\n                className={`btn btn-secondary ${\n                  provider === \"socket\" ? \"active\" : \"\"\n                }`}\n                href=\"/?provider=socket\"\n              >\n                Socket\n              </a>\n              <a\n                className={`btn btn-secondary ${\n                  provider === \"rest\" ? \"active\" : \"\"\n                }`}\n                href=\"/?provider=rest\"\n              >\n                REST\n              </a>\n            </div>\n            <p>\n              Configure the client to make <br/> calls via Socket or\n              REST\n            </p>\n          </div>\n          <div className=\"col-sm-auto\">\n            <h4>Join Location</h4>\n            <div className=\"btn-group mb-2\">\n              <button\n                disabled={loading}\n                className={`btn btn-info ${\n                  joinLocation === \"client\" && !useBatch ? \"active\" : \"\"\n                }`}\n                onClick={() => {\n                  this.setState(\n                    { joinLocation: \"client\", useBatch: false },\n                    () => {\n                      this.loadPosts();\n                      app.set(\"useBatch\", false);\n                    }\n                  );\n                }}\n              >\n                Client\n              </button>\n              <button\n                disabled={loading}\n                className={`btn btn-info ${\n                  joinLocation === \"server\" ? \"active\" : \"\"\n                }`}\n                onClick={() => {\n                  this.setState(\n                    { joinLocation: \"server\", useBatch: false },\n                    () => {\n                      this.loadPosts();\n                      app.set(\"useBatch\", false);\n                    }\n                  );\n                }}\n              >\n                Server\n              </button>\n              <button\n                disabled={loading}\n                className={`btn btn-info ${useBatch ? \"active\" : \"\"}`}\n                onClick={() => {\n                  this.setState(\n                    { joinLocation: \"client\", useBatch: true },\n                    () => {\n                      this.loadPosts();\n                      app.set(\"useBatch\", true);\n                    }\n                  );\n                }}\n              >\n                feathers-batch\n              </button>\n            </div>\n            <p>\n              Choose between doing joins on the <br/> client or the server. See\n              also{\" \"}\n              <a\n                href=\"https://github.com/feathersjs-ecosystem/feathers-batch\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                feathers-batch\n              </a>\n              .\n            </p>\n          </div>\n          <div className=\"col-sm-auto\">\n            <h4>Methods</h4>\n            <div className=\"btn-group mb-2\">\n              <button\n                disabled={loading}\n                className={`btn btn-success ${\n                  method === \"primary\" ? \"active\" : \"\"\n                }`}\n                onClick={() => {\n                  this.setState({ method: \"primary\" }, this.loadPosts);\n                }}\n              >\n                Service\n              </button>\n              <button\n                disabled={loading}\n                className={`btn btn-success ${\n                  method === \"cached\" ? \"active\" : \"\"\n                }`}\n                onClick={() => {\n                  this.setState({ method: \"cached\" }, this.loadPosts);\n                }}\n              >\n                Cached Service\n              </button>\n              <button\n                disabled={loading}\n                className={`btn btn-success ${\n                  method === \"load\" ? \"active\" : \"\"\n                }`}\n                onClick={() => {\n                  this.setState({ method: \"load\" }, this.loadPosts);\n                }}\n              >\n                DataLoader\n              </button>\n            </div>\n            <p>\n              User feathers get/find methods. Or use the <br/> dataloader's cached get/find or load/loadMany methods.\n            </p>\n          </div>\n          <div className=\"col-sm-auto\">\n            <h4>Limit</h4>\n            <input\n              type=\"text\"\n              className=\"form-control mb-2\"\n              value={limit}\n              onChange={(event) => {\n                const limit = event.target.value;\n                this.setState(\n                  {\n                    limit,\n                  },\n                  () => {\n                    if (limit) {\n                      this.loadPosts();\n                    }\n                  }\n                );\n              }}\n            />\n            <p>Set a limit all the way up to 10,000</p>\n          </div>\n        </div>\n\n        <div className=\"mb-4 p-3 bg-light rounded\">\n          <h3>\n            Duration:{\" \"}\n            {loading ? (\n              <div\n                className=\"spinner-border\"\n                style={{\n                  width: \"2rem\",\n                  height: \"2rem\",\n                }}\n              ></div>\n            ) : (\n              <span className=\"text-success\">{duration}ms</span>\n            )}\n          </h3>\n        </div>\n\n        <div className=\"row mb-4\">\n          <div className=\"col\">\n            <h4>Server Profile</h4>\n            {serverProfile && (\n              <pre className=\"p-3 bg-light rounded\">\n                {JSON.stringify(serverProfile, null, 2)}\n              </pre>\n            )}\n          </div>\n          <div className=\"col\">\n            <h4>Client Profile</h4>\n            {clientProfile && (\n              <pre className=\"p-3 bg-light rounded\">\n                {JSON.stringify(clientProfile, null, 2)}\n              </pre>\n            )}\n          </div>\n        </div>\n        <div>\n          <div className=\"mb-4\">\n            <h4>Results</h4>\n            {posts && (\n              <pre className=\"p-3 bg-light rounded\">\n                {JSON.stringify(posts, null, 2)}\n              </pre>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import io from 'socket.io-client';\nimport feathers from '@feathersjs/client';\nimport BatchLoader from '@feathers-plus/batch-loader';\nimport appHooks from './app.hooks';\n// import { batchClient } from 'feathers-batch/client';\nimport { batchClient } from './batchClient';\n\nimport posts from './posts';\nimport profile from './profile';\nimport comments from './comments';\nimport users from './users';\n\nprocess.hrtime = require('browser-process-hrtime');\nconst { profiler, getProfile, clearProfile } = require('feathers-profiler');\n\nconst app = feathers();\n\nconst urlParams = new URLSearchParams(window.location.search);\nconst provider = urlParams.get('provider') || 'socket';\n\nconst API_PATH = process.env.ENV === 'production' ? '/' : 'http://localhost:3030'\n\nif (provider === 'rest') {\n  app.configure(feathers.rest(API_PATH).fetch(fetch));\n} else {\n  app.configure(\n    feathers.socketio(io(API_PATH), { timeout: 100000 })\n  );\n}\n\napp.configure(feathers.authentication());\n\n// Add a nice mixin to services that allow you to easily\n// create batchLoaders w/o all the config\napp.mixins.push(function (service) {\n  service.loaderFactory = function (opts = {}) {\n    if (!service.find) {\n      throw new Error(\n        `Cannot call the loaderFactory() method on this service because it does not have a find() method.`\n      );\n    }\n    const { params = {}, ...rest } = opts;\n    const options = {\n      id: '_id',\n      multi: false,\n      ...rest\n    };\n    const serviceParams = {\n      paginate: false,\n      ...params\n    };\n    return new BatchLoader(async (keys) => {\n      const result = await service.find({\n        ...serviceParams,\n        query: {\n          [options.id]: { $in: BatchLoader.getUniqueKeys(keys) },\n          ...serviceParams.query\n        }\n      });\n      return BatchLoader.getResultsByKey(\n        keys,\n        result.data ? result.data : result,\n        (rec) => rec[options.id],\n        options.multi ? '[!]' : '!'\n      );\n    });\n  };\n});\n\napp.configure(posts);\napp.configure(profile);\napp.configure(comments);\napp.configure(users);\n\n// Setup profiler\napp.configure(\n  profiler({\n    logger: null,\n    stats: 'total'\n  })\n);\n\napp.set('profiler', {\n  getProfile,\n  clearProfile\n});\n\napp.hooks(appHooks);\n\n// Setup feathers-batch\napp.configure(\n  batchClient({\n    batchService: 'api/batch',\n    exclude: ['server/profile', 'client/profile', 'authentication']\n  })\n);\n\napp.setup(app);\n\nexport default app;\n","import { setupLoader, paramsForServer } from 'shared';\n\nexport default {\n  before: {\n    all: [setupLoader, paramsForServer],\n    find: [],\n    get: [],\n    create: [],\n    update: [],\n    patch: [],\n    remove: []\n  },\n\n  after: {\n    all: [],\n    find: [],\n    get: [],\n    create: [],\n    update: [],\n    patch: [],\n    remove: []\n  },\n\n  error: {\n    all: [\n      (context) => {\n        console.error(context.error);\n      }\n    ],\n    find: [],\n    get: [],\n    create: [],\n    update: [],\n    patch: [],\n    remove: []\n  }\n};\n","// Note this file is directly copy pasted from the\n// feathers-batch source code so that it can add\n// the code on lines 75-77. It is also updated\n// to use ESM modules instead of CommonJS so\n// CRA does not bark...\n// It is otherwise unchanged.\n\nconst { convert } = require('@feathersjs/errors');\n\nexport class BatchManager {\n  constructor(app, options) {\n    this.app = app;\n    this.batches = [];\n    this.timeout = null;\n    this.options = options;\n  }\n\n  addBatchCall(batch) {\n    this.batches.push(batch);\n\n    if (this.timeout === null) {\n      this.timeout = setTimeout(() => this.flush(), this.options.timeout || 50);\n    }\n  }\n\n  async flush() {\n    const currentBatches = this.batches;\n\n    this.batches = [];\n    this.timeout = null;\n\n    const { batchService } = this.options;\n    const results = await this.app.service(batchService).create({\n      calls: currentBatches.map(({ payload }) => payload)\n    });\n\n    currentBatches.forEach((batch, index) => {\n      const callResult = results[index];\n\n      if (callResult.status === 'fulfilled') {\n        batch.resolve(callResult.value);\n      } else {\n        batch.reject(convert(callResult.reason));\n      }\n    });\n  }\n}\n\nexport const makeArguments = (context) => {\n  const { query = {} } = context.params;\n\n  switch (context.method) {\n    case 'get':\n    case 'remove':\n      return [context.id, query];\n    case 'update':\n    case 'patch':\n      return [context.id, context.data, query];\n    case 'create':\n      return [context.data, query];\n    default:\n      return [query];\n  }\n};\n\nexport const batchClient = (options) => (app) => {\n  if (typeof options.batchService !== 'string') {\n    throw new Error('`batchService` name option must be passed to batchClient');\n  }\n\n  const excludes = (options.exclude || []).concat(options.batchService);\n  const manager = new BatchManager(app, options);\n  const collectBatches = async (context) => {\n    const { method, path } = context;\n\n    if (!app.get('useBatch')) {\n      return context;\n    }\n\n    if (excludes.includes(path)) {\n      return context;\n    }\n\n    const args = makeArguments(context);\n    const payload = [method, path, ...args];\n    const batchPromise = new Promise((resolve, reject) =>\n      manager.addBatchCall({\n        resolve,\n        reject,\n        payload\n      })\n    );\n\n    context.result = await batchPromise;\n\n    return context;\n  };\n\n  app.hooks({\n    before: collectBatches\n  });\n};\n","import { switchHook } from 'shared';\n\nexport default (app) => {\n  app.service('api/posts').hooks({\n    before: {\n      all: []\n    },\n    after: {\n      all: [switchHook('posts', 'client')]\n    }\n  });\n};\n","export default (app) => {\n  class Profile {\n    constructor(options, app) {\n      this.options = options || {};\n    }\n\n    setup(app) {\n      this.app = app;\n      this.profiler = app.get('profiler');\n    }\n\n    async find(params) {\n      return this.profiler.getProfile();\n    }\n\n    async create(data, params) {\n      if (this.profiler.getProfile()) {\n        this.profiler.clearProfile();\n      }\n      return {};\n    }\n  }\n\n  app.use('client/profile', new Profile());\n\n  app.service('client/profile').hooks({\n    after: {\n      all: [\n        (context) => {\n          delete context._log;\n          delete context.result['client/profile'];\n          delete context.result['server/profile'];\n          return context;\n        }\n      ]\n    }\n  });\n\n  return app;\n};\n","import { switchHook } from 'shared';\n\nexport default (app) => {\n  app.service('api/comments').hooks({\n    before: {\n      all: []\n    },\n    after: {\n      all: [switchHook('comments', 'client')]\n    }\n  });\n};\n","import { switchHook } from 'shared';\n\nexport default (app) => {\n  app.service('api/users').hooks({\n    before: {\n      all: []\n    },\n    after: {\n      all: [switchHook('users', 'client')]\n    }\n  });\n};\n"],"sourceRoot":""}